{"version":3,"sources":["../node_modules/peerjs-js-binarypack/lib/bufferbuilder.js","../node_modules/peerjs-js-binarypack/lib/binarypack.js","supports.ts","util.ts","../node_modules/eventemitter3/index.js","logger.ts","enums.ts","socket.ts","negotiator.ts","baseconnection.ts","mediaconnection.ts","encodingQueue.ts","dataconnection.ts","api.ts","peer.ts","exports.ts"],"names":[],"mappings":"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","file":"peerjs.js","sourceRoot":"../lib","sourcesContent":["var binaryFeatures = {};\r\nbinaryFeatures.useBlobBuilder = (function () {\r\n  try {\r\n    new Blob([]);\r\n    return false;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nbinaryFeatures.useArrayBufferView = !binaryFeatures.useBlobBuilder && (function () {\r\n  try {\r\n    return (new Blob([new Uint8Array([])])).size === 0;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nmodule.exports.binaryFeatures = binaryFeatures;\r\nvar BlobBuilder = module.exports.BlobBuilder;\r\nif (typeof window !== 'undefined') {\r\n  BlobBuilder = module.exports.BlobBuilder = window.WebKitBlobBuilder ||\r\n    window.MozBlobBuilder || window.MSBlobBuilder || window.BlobBuilder;\r\n}\r\n\r\nfunction BufferBuilder () {\r\n  this._pieces = [];\r\n  this._parts = [];\r\n}\r\n\r\nBufferBuilder.prototype.append = function (data) {\r\n  if (typeof data === 'number') {\r\n    this._pieces.push(data);\r\n  } else {\r\n    this.flush();\r\n    this._parts.push(data);\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.flush = function () {\r\n  if (this._pieces.length > 0) {\r\n    var buf = new Uint8Array(this._pieces);\r\n    if (!binaryFeatures.useArrayBufferView) {\r\n      buf = buf.buffer;\r\n    }\r\n    this._parts.push(buf);\r\n    this._pieces = [];\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.getBuffer = function () {\r\n  this.flush();\r\n  if (binaryFeatures.useBlobBuilder) {\r\n    var builder = new BlobBuilder();\r\n    for (var i = 0, ii = this._parts.length; i < ii; i++) {\r\n      builder.append(this._parts[i]);\r\n    }\r\n    return builder.getBlob();\r\n  } else {\r\n    return new Blob(this._parts);\r\n  }\r\n};\r\n\r\nmodule.exports.BufferBuilder = BufferBuilder;\r\n","var BufferBuilder = require('./bufferbuilder').BufferBuilder;\r\nvar binaryFeatures = require('./bufferbuilder').binaryFeatures;\r\n\r\nvar BinaryPack = {\r\n  unpack: function (data) {\r\n    var unpacker = new Unpacker(data);\r\n    return unpacker.unpack();\r\n  },\r\n  pack: function (data) {\r\n    var packer = new Packer();\r\n    packer.pack(data);\r\n    var buffer = packer.getBuffer();\r\n    return buffer;\r\n  }\r\n};\r\n\r\nmodule.exports = BinaryPack;\r\n\r\nfunction Unpacker (data) {\r\n  // Data is ArrayBuffer\r\n  this.index = 0;\r\n  this.dataBuffer = data;\r\n  this.dataView = new Uint8Array(this.dataBuffer);\r\n  this.length = this.dataBuffer.byteLength;\r\n}\r\n\r\nUnpacker.prototype.unpack = function () {\r\n  var type = this.unpack_uint8();\r\n  if (type < 0x80) {\r\n    return type;\r\n  } else if ((type ^ 0xe0) < 0x20) {\r\n    return (type ^ 0xe0) - 0x20;\r\n  }\r\n\r\n  var size;\r\n  if ((size = type ^ 0xa0) <= 0x0f) {\r\n    return this.unpack_raw(size);\r\n  } else if ((size = type ^ 0xb0) <= 0x0f) {\r\n    return this.unpack_string(size);\r\n  } else if ((size = type ^ 0x90) <= 0x0f) {\r\n    return this.unpack_array(size);\r\n  } else if ((size = type ^ 0x80) <= 0x0f) {\r\n    return this.unpack_map(size);\r\n  }\r\n\r\n  switch (type) {\r\n    case 0xc0:\r\n      return null;\r\n    case 0xc1:\r\n      return undefined;\r\n    case 0xc2:\r\n      return false;\r\n    case 0xc3:\r\n      return true;\r\n    case 0xca:\r\n      return this.unpack_float();\r\n    case 0xcb:\r\n      return this.unpack_double();\r\n    case 0xcc:\r\n      return this.unpack_uint8();\r\n    case 0xcd:\r\n      return this.unpack_uint16();\r\n    case 0xce:\r\n      return this.unpack_uint32();\r\n    case 0xcf:\r\n      return this.unpack_uint64();\r\n    case 0xd0:\r\n      return this.unpack_int8();\r\n    case 0xd1:\r\n      return this.unpack_int16();\r\n    case 0xd2:\r\n      return this.unpack_int32();\r\n    case 0xd3:\r\n      return this.unpack_int64();\r\n    case 0xd4:\r\n      return undefined;\r\n    case 0xd5:\r\n      return undefined;\r\n    case 0xd6:\r\n      return undefined;\r\n    case 0xd7:\r\n      return undefined;\r\n    case 0xd8:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_string(size);\r\n    case 0xd9:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_string(size);\r\n    case 0xda:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_raw(size);\r\n    case 0xdb:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_raw(size);\r\n    case 0xdc:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_array(size);\r\n    case 0xdd:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_array(size);\r\n    case 0xde:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_map(size);\r\n    case 0xdf:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_map(size);\r\n  }\r\n};\r\n\r\nUnpacker.prototype.unpack_uint8 = function () {\r\n  var byte = this.dataView[this.index] & 0xff;\r\n  this.index++;\r\n  return byte;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint16 = function () {\r\n  var bytes = this.read(2);\r\n  var uint16 =\r\n    ((bytes[0] & 0xff) * 256) + (bytes[1] & 0xff);\r\n  this.index += 2;\r\n  return uint16;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint32 = function () {\r\n  var bytes = this.read(4);\r\n  var uint32 =\r\n    ((bytes[0] * 256 +\r\n      bytes[1]) * 256 +\r\n      bytes[2]) * 256 +\r\n    bytes[3];\r\n  this.index += 4;\r\n  return uint32;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint64 = function () {\r\n  var bytes = this.read(8);\r\n  var uint64 =\r\n    ((((((bytes[0] * 256 +\r\n      bytes[1]) * 256 +\r\n      bytes[2]) * 256 +\r\n      bytes[3]) * 256 +\r\n      bytes[4]) * 256 +\r\n      bytes[5]) * 256 +\r\n      bytes[6]) * 256 +\r\n    bytes[7];\r\n  this.index += 8;\r\n  return uint64;\r\n};\r\n\r\nUnpacker.prototype.unpack_int8 = function () {\r\n  var uint8 = this.unpack_uint8();\r\n  return (uint8 < 0x80) ? uint8 : uint8 - (1 << 8);\r\n};\r\n\r\nUnpacker.prototype.unpack_int16 = function () {\r\n  var uint16 = this.unpack_uint16();\r\n  return (uint16 < 0x8000) ? uint16 : uint16 - (1 << 16);\r\n};\r\n\r\nUnpacker.prototype.unpack_int32 = function () {\r\n  var uint32 = this.unpack_uint32();\r\n  return (uint32 < Math.pow(2, 31)) ? uint32\r\n    : uint32 - Math.pow(2, 32);\r\n};\r\n\r\nUnpacker.prototype.unpack_int64 = function () {\r\n  var uint64 = this.unpack_uint64();\r\n  return (uint64 < Math.pow(2, 63)) ? uint64\r\n    : uint64 - Math.pow(2, 64);\r\n};\r\n\r\nUnpacker.prototype.unpack_raw = function (size) {\r\n  if (this.length < this.index + size) {\r\n    throw new Error('BinaryPackFailure: index is out of range' +\r\n      ' ' + this.index + ' ' + size + ' ' + this.length);\r\n  }\r\n  var buf = this.dataBuffer.slice(this.index, this.index + size);\r\n  this.index += size;\r\n\r\n  // buf = util.bufferToString(buf);\r\n\r\n  return buf;\r\n};\r\n\r\nUnpacker.prototype.unpack_string = function (size) {\r\n  var bytes = this.read(size);\r\n  var i = 0;\r\n  var str = '';\r\n  var c;\r\n  var code;\r\n\r\n  while (i < size) {\r\n    c = bytes[i];\r\n    if (c < 128) {\r\n      str += String.fromCharCode(c);\r\n      i++;\r\n    } else if ((c ^ 0xc0) < 32) {\r\n      code = ((c ^ 0xc0) << 6) | (bytes[i + 1] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 2;\r\n    } else {\r\n      code = ((c & 15) << 12) | ((bytes[i + 1] & 63) << 6) |\r\n        (bytes[i + 2] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 3;\r\n    }\r\n  }\r\n\r\n  this.index += size;\r\n  return str;\r\n};\r\n\r\nUnpacker.prototype.unpack_array = function (size) {\r\n  var objects = new Array(size);\r\n  for (var i = 0; i < size; i++) {\r\n    objects[i] = this.unpack();\r\n  }\r\n  return objects;\r\n};\r\n\r\nUnpacker.prototype.unpack_map = function (size) {\r\n  var map = {};\r\n  for (var i = 0; i < size; i++) {\r\n    var key = this.unpack();\r\n    var value = this.unpack();\r\n    map[key] = value;\r\n  }\r\n  return map;\r\n};\r\n\r\nUnpacker.prototype.unpack_float = function () {\r\n  var uint32 = this.unpack_uint32();\r\n  var sign = uint32 >> 31;\r\n  var exp = ((uint32 >> 23) & 0xff) - 127;\r\n  var fraction = (uint32 & 0x7fffff) | 0x800000;\r\n  return (sign === 0 ? 1 : -1) *\r\n    fraction * Math.pow(2, exp - 23);\r\n};\r\n\r\nUnpacker.prototype.unpack_double = function () {\r\n  var h32 = this.unpack_uint32();\r\n  var l32 = this.unpack_uint32();\r\n  var sign = h32 >> 31;\r\n  var exp = ((h32 >> 20) & 0x7ff) - 1023;\r\n  var hfrac = (h32 & 0xfffff) | 0x100000;\r\n  var frac = hfrac * Math.pow(2, exp - 20) +\r\n    l32 * Math.pow(2, exp - 52);\r\n  return (sign === 0 ? 1 : -1) * frac;\r\n};\r\n\r\nUnpacker.prototype.read = function (length) {\r\n  var j = this.index;\r\n  if (j + length <= this.length) {\r\n    return this.dataView.subarray(j, j + length);\r\n  } else {\r\n    throw new Error('BinaryPackFailure: read index out of range');\r\n  }\r\n};\r\n\r\nfunction Packer () {\r\n  this.bufferBuilder = new BufferBuilder();\r\n}\r\n\r\nPacker.prototype.getBuffer = function () {\r\n  return this.bufferBuilder.getBuffer();\r\n};\r\n\r\nPacker.prototype.pack = function (value) {\r\n  var type = typeof (value);\r\n  if (type === 'string') {\r\n    this.pack_string(value);\r\n  } else if (type === 'number') {\r\n    if (Math.floor(value) === value) {\r\n      this.pack_integer(value);\r\n    } else {\r\n      this.pack_double(value);\r\n    }\r\n  } else if (type === 'boolean') {\r\n    if (value === true) {\r\n      this.bufferBuilder.append(0xc3);\r\n    } else if (value === false) {\r\n      this.bufferBuilder.append(0xc2);\r\n    }\r\n  } else if (type === 'undefined') {\r\n    this.bufferBuilder.append(0xc0);\r\n  } else if (type === 'object') {\r\n    if (value === null) {\r\n      this.bufferBuilder.append(0xc0);\r\n    } else {\r\n      var constructor = value.constructor;\r\n      if (constructor == Array) {\r\n        this.pack_array(value);\r\n      } else if (constructor == Blob || constructor == File || value instanceof Blob || value instanceof File) {\r\n        this.pack_bin(value);\r\n      } else if (constructor == ArrayBuffer) {\r\n        if (binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value));\r\n        } else {\r\n          this.pack_bin(value);\r\n        }\r\n      } else if ('BYTES_PER_ELEMENT' in value) {\r\n        if (binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value.buffer));\r\n        } else {\r\n          this.pack_bin(value.buffer);\r\n        }\r\n      } else if ((constructor == Object) || (constructor.toString().startsWith('class'))) {\r\n        this.pack_object(value);\r\n      } else if (constructor == Date) {\r\n        this.pack_string(value.toString());\r\n      } else if (typeof value.toBinaryPack === 'function') {\r\n        this.bufferBuilder.append(value.toBinaryPack());\r\n      } else {\r\n        throw new Error('Type \"' + constructor.toString() + '\" not yet supported');\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('Type \"' + type + '\" not yet supported');\r\n  }\r\n  this.bufferBuilder.flush();\r\n};\r\n\r\nPacker.prototype.pack_bin = function (blob) {\r\n  var length = blob.length || blob.byteLength || blob.size;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0xa0 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xda);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdb);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(blob);\r\n};\r\n\r\nPacker.prototype.pack_string = function (str) {\r\n  var length = utf8Length(str);\r\n\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0xb0 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xd8);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xd9);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(str);\r\n};\r\n\r\nPacker.prototype.pack_array = function (ary) {\r\n  var length = ary.length;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0x90 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xdc);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdd);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  for (var i = 0; i < length; i++) {\r\n    this.pack(ary[i]);\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_integer = function (num) {\r\n  if (num >= -0x20 && num <= 0x7f) {\r\n    this.bufferBuilder.append(num & 0xff);\r\n  } else if (num >= 0x00 && num <= 0xff) {\r\n    this.bufferBuilder.append(0xcc);\r\n    this.pack_uint8(num);\r\n  } else if (num >= -0x80 && num <= 0x7f) {\r\n    this.bufferBuilder.append(0xd0);\r\n    this.pack_int8(num);\r\n  } else if (num >= 0x0000 && num <= 0xffff) {\r\n    this.bufferBuilder.append(0xcd);\r\n    this.pack_uint16(num);\r\n  } else if (num >= -0x8000 && num <= 0x7fff) {\r\n    this.bufferBuilder.append(0xd1);\r\n    this.pack_int16(num);\r\n  } else if (num >= 0x00000000 && num <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xce);\r\n    this.pack_uint32(num);\r\n  } else if (num >= -0x80000000 && num <= 0x7fffffff) {\r\n    this.bufferBuilder.append(0xd2);\r\n    this.pack_int32(num);\r\n  } else if (num >= -0x8000000000000000 && num <= 0x7FFFFFFFFFFFFFFF) {\r\n    this.bufferBuilder.append(0xd3);\r\n    this.pack_int64(num);\r\n  } else if (num >= 0x0000000000000000 && num <= 0xFFFFFFFFFFFFFFFF) {\r\n    this.bufferBuilder.append(0xcf);\r\n    this.pack_uint64(num);\r\n  } else {\r\n    throw new Error('Invalid integer');\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_double = function (num) {\r\n  var sign = 0;\r\n  if (num < 0) {\r\n    sign = 1;\r\n    num = -num;\r\n  }\r\n  var exp = Math.floor(Math.log(num) / Math.LN2);\r\n  var frac0 = num / Math.pow(2, exp) - 1;\r\n  var frac1 = Math.floor(frac0 * Math.pow(2, 52));\r\n  var b32 = Math.pow(2, 32);\r\n  var h32 = (sign << 31) | ((exp + 1023) << 20) |\r\n    (frac1 / b32) & 0x0fffff;\r\n  var l32 = frac1 % b32;\r\n  this.bufferBuilder.append(0xcb);\r\n  this.pack_int32(h32);\r\n  this.pack_int32(l32);\r\n};\r\n\r\nPacker.prototype.pack_object = function (obj) {\r\n  var keys = Object.keys(obj);\r\n  var length = keys.length;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0x80 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xde);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdf);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  for (var prop in obj) {\r\n    if (obj.hasOwnProperty(prop)) {\r\n      this.pack(prop);\r\n      this.pack(obj[prop]);\r\n    }\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_uint8 = function (num) {\r\n  this.bufferBuilder.append(num);\r\n};\r\n\r\nPacker.prototype.pack_uint16 = function (num) {\r\n  this.bufferBuilder.append(num >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_uint32 = function (num) {\r\n  var n = num & 0xffffffff;\r\n  this.bufferBuilder.append((n & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((n & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((n & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((n & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_uint64 = function (num) {\r\n  var high = num / Math.pow(2, 32);\r\n  var low = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((low & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_int8 = function (num) {\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_int16 = function (num) {\r\n  this.bufferBuilder.append((num & 0xff00) >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_int32 = function (num) {\r\n  this.bufferBuilder.append((num >>> 24) & 0xff);\r\n  this.bufferBuilder.append((num & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((num & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((num & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_int64 = function (num) {\r\n  var high = Math.floor(num / Math.pow(2, 32));\r\n  var low = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((low & 0x000000ff));\r\n};\r\n\r\nfunction _utf8Replace (m) {\r\n  var code = m.charCodeAt(0);\r\n\r\n  if (code <= 0x7ff) return '00';\r\n  if (code <= 0xffff) return '000';\r\n  if (code <= 0x1fffff) return '0000';\r\n  if (code <= 0x3ffffff) return '00000';\r\n  return '000000';\r\n}\r\n\r\nfunction utf8Length (str) {\r\n  if (str.length > 600) {\r\n    // Blob method faster for large strings\r\n    return (new Blob([str])).size;\r\n  } else {\r\n    return str.replace(/[^\\u0000-\\u007F]/g, _utf8Replace).length;\r\n  }\r\n}\r\n","// import { webRTCAdapter } from './adapter';\n\nexport const Supports = new class {\n  readonly isIOS = ['iPad', 'iPhone', 'iPod'].includes(navigator.platform);\n  readonly supportedBrowsers = ['firefox', 'chrome', 'safari'];\n\n  readonly minFirefoxVersion = 59;\n  readonly minChromeVersion = 72;\n  readonly minSafariVersion = 605;\n\n  isWebRTCSupported(): boolean {\n    return typeof RTCPeerConnection !== 'undefined';\n  };\n\n  isBrowserSupported(): boolean {\n    return true;\n    //\n    // const browser = this.getBrowser();\n    // const version = this.getVersion();\n    //\n    // const validBrowser = this.supportedBrowsers.includes(browser);\n    //\n    // if (!validBrowser) return false;\n    //\n    // if (browser === 'chrome') return version >= this.minChromeVersion;\n    // if (browser === 'firefox') return version >= this.minFirefoxVersion;\n    // if (browser === 'safari') return !this.isIOS && version >= this.minSafariVersion;\n\n    return false;\n  }\n\n  getBrowser(): string {\n    return 'chrome';\n    // return webRTCAdapter.browserDetails.browser;\n  }\n\n  getVersion(): number {\n    return 80;\n    // return webRTCAdapter.browserDetails.version || 0;\n  }\n\n  isUnifiedPlanSupported(): boolean {\n    // return true;\n    // const browser = this.getBrowser();\n    // const version = webRTCAdapter.browserDetails.version || 0;\n    //\n    // if (browser === 'chrome' && version < 72) return false;\n    // if (browser === 'firefox' && version >= 59) return true;\n    // if (!window.RTCRtpTransceiver || !('currentDirection' in RTCRtpTransceiver.prototype)) return false;\n    //\n    // let tempPc: RTCPeerConnection;\n    // let supported = false;\n    //\n    // try {\n    //   tempPc = new RTCPeerConnection();\n    //   tempPc.addTransceiver('audio');\n    //   supported = true;\n    // } catch (e) { }\n    // finally {\n    //   if (tempPc) {\n    //     tempPc.close();\n    //   }\n    // }\n    //\n    // return supported;\n  }\n\n  toString(): string {\n    return `Supports: \n    browser:${this.getBrowser()} \n    version:${this.getVersion()} \n    isIOS:${this.isIOS} \n    isWebRTCSupported:${this.isWebRTCSupported()} \n    isBrowserSupported:${this.isBrowserSupported()} \n    isUnifiedPlanSupported:${this.isUnifiedPlanSupported()}`;\n  }\n}\n","import * as BinaryPack from \"peerjs-js-binarypack\";\nimport { Supports } from './supports';\nimport { UtilSupportsObj } from '..';\n\nconst DEFAULT_CONFIG = {\n  iceServers: [\n    { urls: \"stun:stun.l.google.com:19302\" },\n    { urls: \"turn:0.peerjs.com:3478\", username: \"peerjs\", credential: \"peerjsp\" }\n  ],\n  sdpSemantics: \"unified-plan\"\n};\n\nexport const util = new class {\n  noop(): void { }\n\n  readonly CLOUD_HOST = \"0.peerjs.com\";\n  readonly CLOUD_PORT = 443;\n\n  // Browsers that need chunking:\n  readonly chunkedBrowsers = { Chrome: 1, chrome: 1 };\n  readonly chunkedMTU = 16300; // The original 60000 bytes setting does not work when sending data from Firefox to Chrome, which is \"cut off\" after 16384 bytes and delivered individually.\n\n  // Returns browser-agnostic default config\n  readonly defaultConfig = DEFAULT_CONFIG;\n\n  readonly browser = Supports.getBrowser();\n  readonly browserVersion = Supports.getVersion();\n\n  // Lists which features are supported\n  readonly supports = (function () {\n    const supported: UtilSupportsObj = {\n      browser: Supports.isBrowserSupported(),\n      webRTC: Supports.isWebRTCSupported(),\n      audioVideo: false,\n      data: false,\n      binaryBlob: false,\n      reliable: false,\n    };\n\n    if (!supported.webRTC) return supported;\n\n    let pc: RTCPeerConnection;\n\n    try {\n      pc = new RTCPeerConnection(DEFAULT_CONFIG);\n\n      supported.audioVideo = true;\n\n      let dc: RTCDataChannel;\n\n      try {\n        dc = pc.createDataChannel(\"_PEERJSTEST\", { ordered: true });\n        supported.data = true;\n        supported.reliable = !!dc.ordered;\n\n        // Binary test\n        try {\n          dc.binaryType = \"blob\";\n          supported.binaryBlob = !Supports.isIOS;\n        } catch (e) {\n        }\n      } catch (e) {\n      } finally {\n        if (dc) {\n          dc.close();\n        }\n      }\n    } catch (e) {\n    } finally {\n      if (pc) {\n        pc.close();\n      }\n    }\n\n    return supported;\n  })();\n\n  // Ensure alphanumeric ids\n  validateId(id: string): boolean {\n    // Allow empty ids\n    return !id || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.test(id);\n  }\n\n  pack = BinaryPack.pack;\n  unpack = BinaryPack.unpack;\n\n  // Binary stuff\n\n  private _dataCount: number = 1;\n\n  chunk(blob: Blob): { __peerData: number, n: number, total: number, data: Blob }[] {\n    const chunks = [];\n    const size = blob.size;\n    const total = Math.ceil(size / util.chunkedMTU);\n\n    let index = 0;\n    let start = 0;\n\n    while (start < size) {\n      const end = Math.min(size, start + util.chunkedMTU);\n      const b = blob.slice(start, end);\n\n      const chunk = {\n        __peerData: this._dataCount,\n        n: index,\n        data: b,\n        total,\n      };\n\n      chunks.push(chunk);\n\n      start = end;\n      index++;\n    }\n\n    this._dataCount++;\n\n    return chunks;\n  }\n\n  blobToArrayBuffer(blob: Blob, cb: (arg: ArrayBuffer | null) => void): FileReader {\n    const fr = new FileReader();\n\n    fr.onload = function (evt) {\n      if (evt.target) {\n        cb(evt.target.result as ArrayBuffer);\n      }\n    };\n\n    fr.readAsArrayBuffer(blob);\n\n    return fr;\n  }\n\n  binaryStringToArrayBuffer(binary: string): ArrayBuffer | SharedArrayBuffer {\n    const byteArray = new Uint8Array(binary.length);\n\n    for (let i = 0; i < binary.length; i++) {\n      byteArray[i] = binary.charCodeAt(i) & 0xff;\n    }\n\n    return byteArray.buffer;\n  }\n\n  randomToken(): string {\n    return Math.random()\n      .toString(36)\n      .substr(2);\n  }\n\n  isSecure(): boolean {\n    return location.protocol === \"https:\";\n  }\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","const LOG_PREFIX = 'PeerJS: ';\n\n/*\nPrints log messages depending on the debug level passed in. Defaults to 0.\n0  Prints no logs.\n1  Prints only errors.\n2  Prints errors and warnings.\n3  Prints all logs.\n*/\nexport enum LogLevel {\n    Disabled,\n    Errors,\n    Warnings,\n    All\n}\n\nclass Logger {\n    private _logLevel = LogLevel.Disabled;\n\n    get logLevel(): LogLevel { return this._logLevel; }\n\n    set logLevel(logLevel: LogLevel) { this._logLevel = logLevel; }\n\n    log(...args: any[]) {\n        if (this._logLevel >= LogLevel.All) {\n            this._print(LogLevel.All, ...args);\n        }\n    }\n\n    warn(...args: any[]) {\n        if (this._logLevel >= LogLevel.Warnings) {\n            this._print(LogLevel.Warnings, ...args);\n        }\n    }\n\n    error(...args: any[]) {\n        if (this._logLevel >= LogLevel.Errors) {\n            this._print(LogLevel.Errors, ...args);\n        }\n    }\n\n    setLogFunction(fn: (logLevel: LogLevel, ..._: any[]) => void): void {\n        this._print = fn;\n    }\n\n    private _print(logLevel: LogLevel, ...rest: any[]): void {\n        const copy = [LOG_PREFIX, ...rest];\n\n        for (let i in copy) {\n            if (copy[i] instanceof Error) {\n                copy[i] = \"(\" + copy[i].name + \") \" + copy[i].message;\n\n            }\n        }\n\n        if (logLevel >= LogLevel.All) {\n            console.log(...copy);\n        } else if (logLevel >= LogLevel.Warnings) {\n            console.warn(\"WARNING\", ...copy);\n        } else if (logLevel >= LogLevel.Errors) {\n            console.error(\"ERROR\", ...copy);\n        }\n    }\n}\n\nexport default new Logger();","export enum ConnectionEventType {\n  Open = \"open\",\n  Stream = \"stream\",\n  Data = \"data\",\n  Close = \"close\",\n  Error = \"error\",\n  IceStateChanged = \"iceStateChanged\"\n}\n\nexport enum ConnectionType {\n  Data = \"data\",\n  Media = \"media\"\n}\n\nexport enum PeerEventType {\n  Open = \"open\",\n  Close = \"close\",\n  Connection = \"connection\",\n  Call = \"call\",\n  Disconnected = \"disconnected\",\n  Error = \"error\"\n}\n\nexport enum PeerErrorType {\n  BrowserIncompatible = \"browser-incompatible\",\n  Disconnected = \"disconnected\",\n  InvalidID = \"invalid-id\",\n  InvalidKey = \"invalid-key\",\n  Network = \"network\",\n  PeerUnavailable = \"peer-unavailable\",\n  SslUnavailable = \"ssl-unavailable\",\n  ServerError = \"server-error\",\n  SocketError = \"socket-error\",\n  SocketClosed = \"socket-closed\",\n  UnavailableID = \"unavailable-id\",\n  WebRTC = \"webrtc\"\n}\n\nexport enum SerializationType {\n  Binary = \"binary\",\n  BinaryUTF8 = \"binary-utf8\",\n  JSON = \"json\"\n}\n\nexport enum SocketEventType {\n  Message = \"message\",\n  Disconnected = \"disconnected\",\n  Error = \"error\",\n  Close = \"close\"\n}\n\nexport enum ServerMessageType {\n  Heartbeat = \"HEARTBEAT\",\n  Candidate = \"CANDIDATE\",\n  Offer = \"OFFER\",\n  Answer = \"ANSWER\",\n  Open = \"OPEN\", // The connection to the server is open.\n  Error = \"ERROR\", // Server error.\n  IdTaken = \"ID-TAKEN\", // The selected ID is taken.\n  InvalidKey = \"INVALID-KEY\", // The given API key cannot be found.\n  Leave = \"LEAVE\", // Another peer has closed its connection to this peer.\n  Expire = \"EXPIRE\", // The offer sent to a peer has expired without response.\n  Logic = \"LOGIC\"\n}\n","import { EventEmitter } from \"eventemitter3\";\nimport logger from \"./logger\";\nimport { SocketEventType, ServerMessageType } from \"./enums\";\n\n/**\n * An abstraction on top of WebSockets to provide fastest\n * possible connection for peers.\n */\nexport class Socket extends EventEmitter {\n  private _disconnected: boolean = true;\n  private _id?: string;\n  private _messagesQueue: Array<object> = [];\n  private _socket?: WebSocket;\n  private _wsPingTimer?: any;\n  private readonly _baseUrl: string;\n\n  constructor(\n    secure: any,\n    host: string,\n    port: number,\n    path: string,\n    key: string,\n    private readonly pingInterval: number = 5000,\n  ) {\n    super();\n\n    const wsProtocol = secure ? \"wss://\" : \"ws://\";\n\n    this._baseUrl = wsProtocol + host + \":\" + port + path + \"peerjs?key=\" + key;\n  }\n\n  start(id: string, token: string): void {\n    this._id = id;\n\n    const wsUrl = `${this._baseUrl}&id=${id}&token=${token}`;\n\n    if (!!this._socket || !this._disconnected) {\n      return;\n    }\n\n    this._socket = new WebSocket(wsUrl);\n    this._disconnected = false;\n\n    this._socket.onmessage = (event) => {\n      let data;\n\n      try {\n        data = JSON.parse(event.data);\n        logger.log(\"Server message received:\", data);\n      } catch (e) {\n        logger.log(\"Invalid server message\", event.data);\n        return;\n      }\n\n      this.emit(SocketEventType.Message, data);\n    };\n\n    this._socket.onclose = (event) => {\n      if (this._disconnected) {\n        return;\n      }\n\n      logger.log(\"Socket closed.\", event);\n\n      this._cleanup();\n      this._disconnected = true;\n\n      this.emit(SocketEventType.Disconnected);\n    };\n\n    // Take care of the queue of connections if necessary and make sure Peer knows\n    // socket is open.\n    this._socket.onopen = () => {\n      if (this._disconnected) {\n        return;\n      }\n\n      this._sendQueuedMessages();\n\n      logger.log(\"Socket open\");\n\n      this._scheduleHeartbeat();\n    };\n  }\n\n  private _scheduleHeartbeat(): void {\n    this._wsPingTimer = setTimeout(() => {\n      this._sendHeartbeat();\n    }, this.pingInterval);\n  }\n\n  private _sendHeartbeat(): void {\n    if (!this._wsOpen()) {\n      logger.log(`Cannot send heartbeat, because socket closed`);\n      return;\n    }\n\n    const message = JSON.stringify({ type: ServerMessageType.Heartbeat });\n\n    this._socket!.send(message);\n\n    this._scheduleHeartbeat();\n  }\n\n  /** Is the websocket currently open? */\n  private _wsOpen(): boolean {\n    return !!this._socket && this._socket.readyState === 1;\n  }\n\n  /** Send queued messages. */\n  private _sendQueuedMessages(): void {\n    //Create copy of queue and clear it,\n    //because send method push the message back to queue if smth will go wrong\n    const copiedQueue = [...this._messagesQueue];\n    this._messagesQueue = [];\n\n    for (const message of copiedQueue) {\n      this.send(message);\n    }\n  }\n\n  /** Exposed send for DC & Peer. */\n  send(data: any): void {\n    if (this._disconnected) {\n      return;\n    }\n\n    // If we didn't get an ID yet, we can't yet send anything so we should queue\n    // up these messages.\n    if (!this._id) {\n      this._messagesQueue.push(data);\n      return;\n    }\n\n    if (!data.type) {\n      this.emit(SocketEventType.Error, \"Invalid message\");\n      return;\n    }\n\n    if (!this._wsOpen()) {\n      return;\n    }\n\n    const message = JSON.stringify(data);\n\n    this._socket!.send(message);\n  }\n\n  close(): void {\n    if (this._disconnected) {\n      return;\n    }\n\n    this._cleanup();\n\n    this._disconnected = true;\n  }\n\n  private _cleanup(): void {\n    if (!!this._socket) {\n      this._socket.onopen = this._socket.onmessage = this._socket.onclose = null;\n      this._socket.close();\n      this._socket = undefined;\n    }\n\n    clearTimeout(this._wsPingTimer!);\n  }\n}\n","import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { MediaConnection } from \"./mediaconnection\";\nimport { DataConnection } from \"./dataconnection\";\nimport { ConnectionType, PeerErrorType, ConnectionEventType, ServerMessageType } from \"./enums\";\nimport { BaseConnection } from \"./baseconnection\";\n\n/**\n * Manages all negotiations between Peers.\n */\nexport class Negotiator {\n  constructor(readonly connection: BaseConnection) { }\n\n  /** Returns a PeerConnection object set up correctly (for data, media). */\n  startConnection(options: any) {\n    const peerConnection = this._startPeerConnection();\n\n    // Set the connection's PC.\n    this.connection.peerConnection = peerConnection;\n\n    if (this.connection.type === ConnectionType.Media && options._stream) {\n      this._addTracksToConnection(options._stream, peerConnection);\n    }\n\n    // What do we need to do now?\n    if (options.originator) {\n      if (this.connection.type === ConnectionType.Data) {\n        const dataConnection = <DataConnection>this.connection;\n\n        const config: RTCDataChannelInit = { ordered: !!options.reliable };\n\n        const dataChannel = peerConnection.createDataChannel(\n          dataConnection.label,\n          config\n        );\n        dataConnection.initialize(dataChannel);\n      }\n\n      this._makeOffer();\n    } else {\n      this.handleSDP(\"OFFER\", options.sdp);\n    }\n  }\n\n  /** Start a PC. */\n  private _startPeerConnection(): RTCPeerConnection {\n    logger.log(\"Creating RTCPeerConnection.\");\n\n    const peerConnection = new RTCPeerConnection(this.connection.provider.options.config);\n\n    this._setupListeners(peerConnection);\n\n    return peerConnection;\n  }\n\n  /** Set up various WebRTC listeners. */\n  private _setupListeners(\n    peerConnection: RTCPeerConnection\n  ) {\n    const peerId = this.connection.peer;\n    const connectionId = this.connection.connectionId;\n    const connectionType = this.connection.type;\n    const provider = this.connection.provider;\n\n    // ICE CANDIDATES.\n    logger.log(\"Listening for ICE candidates.\");\n\n    peerConnection.onicecandidate = (evt) => {\n      if (!evt.candidate || !evt.candidate.candidate) return;\n\n      logger.log(`Received ICE candidates for ${peerId}:`, evt.candidate);\n\n      provider.socket.send({\n        type: ServerMessageType.Candidate,\n        payload: {\n          candidate: evt.candidate,\n          type: connectionType,\n          connectionId: connectionId\n        },\n        dst: peerId\n      });\n    };\n\n    peerConnection.oniceconnectionstatechange = () => {\n      switch (peerConnection.iceConnectionState) {\n        case \"failed\":\n          logger.log(\n            \"iceConnectionState is failed, closing connections to \" +\n            peerId\n          );\n          this.connection.emit(\n            ConnectionEventType.Error,\n            new Error(\"Negotiation of connection to \" + peerId + \" failed.\")\n          );\n          this.connection.close();\n          break;\n        case \"closed\":\n          logger.log(\n            \"iceConnectionState is closed, closing connections to \" +\n            peerId\n          );\n          this.connection.emit(\n            ConnectionEventType.Error,\n            new Error(\"Connection to \" + peerId + \" closed.\")\n          );\n          this.connection.close();\n          break;\n        case \"disconnected\":\n          logger.log(\n            \"iceConnectionState is disconnected, closing connections to \" +\n            peerId\n          );\n          this.connection.emit(\n            ConnectionEventType.Error,\n            new Error(\"Connection to \" + peerId + \" disconnected.\")\n          );\n          this.connection.close();\n          break;\n        case \"completed\":\n          peerConnection.onicecandidate = util.noop;\n          break;\n      }\n\n      this.connection.emit(ConnectionEventType.IceStateChanged, peerConnection.iceConnectionState);\n    };\n\n    // DATACONNECTION.\n    logger.log(\"Listening for data channel\");\n    // Fired between offer and answer, so options should already be saved\n    // in the options hash.\n    peerConnection.ondatachannel = (evt) => {\n      logger.log(\"Received data channel\");\n\n      const dataChannel = evt.channel;\n      const connection = <DataConnection>(\n        provider.getConnection(peerId, connectionId)\n      );\n\n      connection.initialize(dataChannel);\n    };\n\n    // MEDIACONNECTION.\n    logger.log(\"Listening for remote stream\");\n\n    peerConnection.ontrack = (evt) => {\n      logger.log(\"Received remote stream\");\n\n      const stream = evt.streams[0];\n      const connection = provider.getConnection(peerId, connectionId);\n\n      if (connection.type === ConnectionType.Media) {\n        const mediaConnection = <MediaConnection>connection;\n\n        this._addStreamToMediaConnection(stream, mediaConnection);\n      }\n    };\n  }\n\n  cleanup(): void {\n    logger.log(\"Cleaning up PeerConnection to \" + this.connection.peer);\n\n    const peerConnection = this.connection.peerConnection;\n\n    if (!peerConnection) {\n      return;\n    }\n\n    this.connection.peerConnection = null;\n\n    //unsubscribe from all PeerConnection's events\n    peerConnection.onicecandidate = peerConnection.oniceconnectionstatechange = peerConnection.ondatachannel = peerConnection.ontrack = () => { };\n\n    const peerConnectionNotClosed = peerConnection.signalingState !== \"closed\";\n    let dataChannelNotClosed = false;\n\n    if (this.connection.type === ConnectionType.Data) {\n      const dataConnection = <DataConnection>this.connection;\n      const dataChannel = dataConnection.dataChannel;\n\n      if (dataChannel) {\n        dataChannelNotClosed = !!dataChannel.readyState && dataChannel.readyState !== \"closed\";\n      }\n    }\n\n    if (peerConnectionNotClosed || dataChannelNotClosed) {\n      peerConnection.close();\n    }\n  }\n\n  private async _makeOffer(): Promise<void> {\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    try {\n      const offer = await peerConnection.createOffer(\n        this.connection.options.constraints\n      );\n\n      logger.log(\"Created offer.\");\n\n      if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === 'function') {\n        offer.sdp = this.connection.options.sdpTransform(offer.sdp) || offer.sdp;\n      }\n\n      try {\n        await peerConnection.setLocalDescription(offer);\n\n        logger.log(\"Set localDescription:\", offer, `for:${this.connection.peer}`);\n\n        let payload: any = {\n          sdp: offer,\n          type: this.connection.type,\n          connectionId: this.connection.connectionId,\n          metadata: this.connection.metadata,\n          browser: util.browser\n        };\n\n        if (this.connection.type === ConnectionType.Data) {\n          const dataConnection = <DataConnection>this.connection;\n\n          payload = {\n            ...payload,\n            label: dataConnection.label,\n            reliable: dataConnection.reliable,\n            serialization: dataConnection.serialization\n          };\n        }\n\n        provider.socket.send({\n          type: ServerMessageType.Offer,\n          payload,\n          dst: this.connection.peer\n        });\n      } catch (err) {\n        // TODO: investigate why _makeOffer is being called from the answer\n        if (\n          err !=\n          \"OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer\"\n        ) {\n          provider.emitError(PeerErrorType.WebRTC, err);\n          logger.log(\"Failed to setLocalDescription, \", err);\n        }\n      }\n    } catch (err_1) {\n      provider.emitError(PeerErrorType.WebRTC, err_1);\n      logger.log(\"Failed to createOffer, \", err_1);\n    }\n  }\n\n  private async _makeAnswer(): Promise<void> {\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    try {\n      const answer = await peerConnection.createAnswer();\n      logger.log(\"Created answer.\");\n\n      if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === 'function') {\n        answer.sdp = this.connection.options.sdpTransform(answer.sdp) || answer.sdp;\n      }\n\n      try {\n        await peerConnection.setLocalDescription(answer);\n\n        logger.log(`Set localDescription:`, answer, `for:${this.connection.peer}`);\n\n        provider.socket.send({\n          type: ServerMessageType.Answer,\n          payload: {\n            sdp: answer,\n            type: this.connection.type,\n            connectionId: this.connection.connectionId,\n            browser: util.browser\n          },\n          dst: this.connection.peer\n        });\n      } catch (err) {\n        provider.emitError(PeerErrorType.WebRTC, err);\n        logger.log(\"Failed to setLocalDescription, \", err);\n      }\n    } catch (err_1) {\n      provider.emitError(PeerErrorType.WebRTC, err_1);\n      logger.log(\"Failed to create answer, \", err_1);\n    }\n  }\n\n  /** Handle an SDP. */\n  async handleSDP(\n    type: string,\n    sdp: any\n  ): Promise<void> {\n    sdp = new RTCSessionDescription(sdp);\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    logger.log(\"Setting remote description\", sdp);\n\n    const self = this;\n\n    try {\n      await peerConnection.setRemoteDescription(sdp);\n      logger.log(`Set remoteDescription:${type} for:${this.connection.peer}`);\n      if (type === \"OFFER\") {\n        await self._makeAnswer();\n      }\n    } catch (err) {\n      provider.emitError(PeerErrorType.WebRTC, err);\n      logger.log(\"Failed to setRemoteDescription, \", err);\n    }\n  }\n\n  /** Handle a candidate. */\n  async handleCandidate(ice: any): Promise<void> {\n    logger.log(`handleCandidate:`, ice);\n\n    const candidate = ice.candidate;\n    const sdpMLineIndex = ice.sdpMLineIndex;\n    const sdpMid = ice.sdpMid;\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    try {\n      await peerConnection.addIceCandidate(\n        new RTCIceCandidate({\n          sdpMid: sdpMid,\n          sdpMLineIndex: sdpMLineIndex,\n          candidate: candidate\n        })\n      );\n      logger.log(`Added ICE candidate for:${this.connection.peer}`);\n    } catch (err) {\n      provider.emitError(PeerErrorType.WebRTC, err);\n      logger.log(\"Failed to handleCandidate, \", err);\n    }\n  }\n\n  private _addTracksToConnection(\n    stream: MediaStream,\n    peerConnection: RTCPeerConnection\n  ): void {\n    logger.log(`add tracks from stream ${stream.id} to peer connection`);\n\n    if (!peerConnection.addTrack) {\n      return logger.error(\n        `Your browser does't support RTCPeerConnection#addTrack. Ignored.`\n      );\n    }\n\n    stream.getTracks().forEach(track => {\n      peerConnection.addTrack(track, stream);\n    });\n  }\n\n  private _addStreamToMediaConnection(\n    stream: MediaStream,\n    mediaConnection: MediaConnection\n  ): void {\n    logger.log(\n      `add stream ${stream.id} to media connection ${\n      mediaConnection.connectionId\n      }`\n    );\n\n    mediaConnection.addStream(stream);\n  }\n}\n","import { EventEmitter } from \"eventemitter3\";\nimport { Peer } from \"./peer\";\nimport { ServerMessage } from \"./servermessage\";\nimport { ConnectionType } from \"./enums\";\n\nexport abstract class BaseConnection extends EventEmitter {\n  protected _open = false;\n\n  readonly metadata: any;\n  connectionId: string;\n\n  peerConnection: RTCPeerConnection;\n\n  abstract get type(): ConnectionType;\n\n  get open() {\n    return this._open;\n  }\n\n  constructor(\n    readonly peer: string,\n    public provider: Peer,\n    readonly options: any\n  ) {\n    super();\n\n    this.metadata = options.metadata;\n  }\n\n  abstract close(): void;\n\n  abstract handleMessage(message: ServerMessage): void;\n}\n","import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { Negotiator } from \"./negotiator\";\nimport { ConnectionType, ConnectionEventType, ServerMessageType } from \"./enums\";\nimport { Peer } from \"./peer\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport { AnswerOption } from \"..\";\n\n/**\n * Wraps the streaming interface between two Peers.\n */\nexport class MediaConnection extends BaseConnection {\n  private static readonly ID_PREFIX = \"mc_\";\n\n  private _negotiator: Negotiator;\n  private _localStream: MediaStream;\n  private _remoteStream: MediaStream;\n\n  get type() {\n    return ConnectionType.Media;\n  }\n\n  get localStream(): MediaStream { return this._localStream; }\n  get remoteStream(): MediaStream { return this._remoteStream; }\n\n  constructor(peerId: string, provider: Peer, options: any) {\n    super(peerId, provider, options);\n\n    this._localStream = this.options._stream;\n    this.connectionId =\n      this.options.connectionId ||\n      MediaConnection.ID_PREFIX + util.randomToken();\n\n    this._negotiator = new Negotiator(this);\n\n    if (this._localStream) {\n      this._negotiator.startConnection({\n        _stream: this._localStream,\n        originator: true\n      });\n    }\n  }\n\n  addStream(remoteStream) {\n    logger.log(\"Receiving stream\", remoteStream);\n\n    this._remoteStream = remoteStream;\n    super.emit(ConnectionEventType.Stream, remoteStream); // Should we call this `open`?\n  }\n\n  handleMessage(message: ServerMessage): void {\n    const type = message.type;\n    const payload = message.payload;\n\n    switch (message.type) {\n      case ServerMessageType.Answer:\n        // Forward to negotiator\n        this._negotiator.handleSDP(type, payload.sdp);\n        this._open = true;\n        break;\n      case ServerMessageType.Candidate:\n        this._negotiator.handleCandidate(payload.candidate);\n        break;\n      default:\n        logger.warn(`Unrecognized message type:${type} from peer:${this.peer}`);\n        break;\n    }\n  }\n\n  answer(stream: MediaStream, options: AnswerOption = {}): void {\n    if (this._localStream) {\n      logger.warn(\n        \"Local stream already exists on this MediaConnection. Are you answering a call twice?\"\n      );\n      return;\n    }\n\n    this._localStream = stream;\n\n    if (options && options.sdpTransform) {\n      this.options.sdpTransform = options.sdpTransform;\n    }\n\n    this._negotiator.startConnection({ ...this.options._payload, _stream: stream });\n    // Retrieve lost messages stored because PeerConnection not set up.\n    const messages = this.provider._getMessages(this.connectionId);\n\n    for (let message of messages) {\n      this.handleMessage(message);\n    }\n\n    this._open = true;\n  }\n\n  /**\n   * Exposed functionality for users.\n   */\n\n  /** Allows user to close connection. */\n  close(): void {\n    if (this._negotiator) {\n      this._negotiator.cleanup();\n      this._negotiator = null;\n    }\n\n    this._localStream = null;\n    this._remoteStream = null;\n\n    if (this.provider) {\n      this.provider._removeConnection(this);\n\n      this.provider = null;\n    }\n\n    if (this.options && this.options._stream) {\n      this.options._stream = null;\n    }\n\n    if (!this.open) {\n      return;\n    }\n\n    this._open = false;\n\n    super.emit(ConnectionEventType.Close);\n  }\n}\n","import { EventEmitter } from \"eventemitter3\";\nimport logger from \"./logger\";\n\nexport class EncodingQueue extends EventEmitter {\n  readonly fileReader: FileReader = new FileReader();\n\n  private _queue: Blob[] = [];\n  private _processing: boolean = false;\n\n  constructor() {\n    super();\n\n    this.fileReader.onload = (evt) => {\n      this._processing = false;\n\n      if (evt.target) {\n        this.emit('done', evt.target.result as ArrayBuffer);\n      }\n\n      this.doNextTask();\n    };\n\n    this.fileReader.onerror = (evt) => {\n      logger.error(`EncodingQueue error:`, evt);\n      this._processing = false;\n      this.destroy();\n      this.emit('error', evt);\n    }\n  }\n\n  get queue(): Blob[] {\n    return this._queue;\n  }\n\n  get size(): number {\n    return this.queue.length;\n  }\n\n  get processing(): boolean {\n    return this._processing;\n  }\n\n  enque(blob: Blob): void {\n    this.queue.push(blob);\n\n    if (this.processing) return;\n\n    this.doNextTask();\n  }\n\n  destroy(): void {\n    this.fileReader.abort();\n    this._queue = [];\n  }\n\n  private doNextTask(): void {\n    if (this.size === 0) return;\n    if (this.processing) return;\n\n    this._processing = true;\n\n    this.fileReader.readAsArrayBuffer(this.queue.shift());\n  }\n}","import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { Negotiator } from \"./negotiator\";\nimport {\n  ConnectionType,\n  ConnectionEventType,\n  SerializationType,\n  ServerMessageType\n} from \"./enums\";\nimport { Peer } from \"./peer\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport { EncodingQueue } from './encodingQueue';\nimport { DataConnection as IDataConnection } from '../index';\n\n/**\n * Wraps a DataChannel between two Peers.\n */\nexport class DataConnection extends BaseConnection implements IDataConnection {\n  private static readonly ID_PREFIX = \"dc_\";\n  private static readonly MAX_BUFFERED_AMOUNT = 8 * 1024 * 1024;\n\n  private _negotiator: Negotiator;\n  readonly label: string;\n  readonly serialization: SerializationType;\n  readonly reliable: boolean;\n  stringify: (data: any) => string = JSON.stringify;\n  parse: (data: string) => any = JSON.parse;\n\n  get type() {\n    return ConnectionType.Data;\n  }\n\n  private _buffer: any[] = [];\n  private _bufferSize = 0;\n  private _buffering = false;\n  private _chunkedData: {\n    [id: number]: {\n      data: Blob[],\n      count: number,\n      total: number\n    }\n  } = {};\n\n  private _dc: RTCDataChannel;\n  private _encodingQueue = new EncodingQueue();\n\n  get dataChannel(): RTCDataChannel {\n    return this._dc;\n  }\n\n  get bufferSize(): number { return this._bufferSize; }\n\n  constructor(peerId: string, provider: Peer, options: any) {\n    super(peerId, provider, options);\n\n    this.connectionId =\n      this.options.connectionId || DataConnection.ID_PREFIX + util.randomToken();\n\n    this.label = this.options.label || this.connectionId;\n    this.serialization = this.options.serialization || SerializationType.Binary;\n    this.reliable = !!this.options.reliable;\n\n    this._encodingQueue.on('done', (ab: ArrayBuffer) => {\n      this._bufferedSend(ab);\n    });\n\n    this._encodingQueue.on('error', () => {\n      logger.error(`DC#${this.connectionId}: Error occured in encoding from blob to arraybuffer, close DC`);\n      this.close();\n    });\n\n    this._negotiator = new Negotiator(this);\n\n    this._negotiator.startConnection(\n      this.options._payload || {\n        originator: true\n      }\n    );\n  }\n\n  /** Called by the Negotiator when the DataChannel is ready. */\n  initialize(dc: RTCDataChannel): void {\n    this._dc = dc;\n    this._configureDataChannel();\n  }\n\n  private _configureDataChannel(): void {\n    if (!util.supports.binaryBlob || util.supports.reliable) {\n      this.dataChannel.binaryType = \"arraybuffer\";\n    }\n\n    this.dataChannel.onopen = () => {\n      logger.log(`DC#${this.connectionId} dc connection success`);\n      this._open = true;\n      this.emit(ConnectionEventType.Open);\n    };\n\n    this.dataChannel.onmessage = (e) => {\n      logger.log(`DC#${this.connectionId} dc onmessage:`, e.data);\n      this._handleDataMessage(e);\n    };\n\n    this.dataChannel.onclose = () => {\n      logger.log(`DC#${this.connectionId} dc closed for:`, this.peer);\n      this.close();\n    };\n  }\n\n  // Handles a DataChannel message.\n  private _handleDataMessage({ data }: { data: Blob | ArrayBuffer | string }): void {\n    const datatype = data.constructor;\n\n    const isBinarySerialization = this.serialization === SerializationType.Binary ||\n      this.serialization === SerializationType.BinaryUTF8;\n\n    let deserializedData: any = data;\n\n    if (isBinarySerialization) {\n      if (datatype === Blob) {\n        // Datatype should never be blob\n        util.blobToArrayBuffer(data as Blob, (ab) => {\n          const unpackedData = util.unpack(ab);\n          this.emit(ConnectionEventType.Data, unpackedData);\n        });\n        return;\n      } else if (datatype === ArrayBuffer) {\n        deserializedData = util.unpack(data as ArrayBuffer);\n      } else if (datatype === String) {\n        // String fallback for binary data for browsers that don't support binary yet\n        const ab = util.binaryStringToArrayBuffer(data as string);\n        deserializedData = util.unpack(ab);\n      }\n    } else if (this.serialization === SerializationType.JSON) {\n      deserializedData = this.parse(data as string);\n    }\n\n    // Check if we've chunked--if so, piece things back together.\n    // We're guaranteed that this isn't 0.\n    if (deserializedData.__peerData) {\n      this._handleChunk(deserializedData);\n      return;\n    }\n\n    super.emit(ConnectionEventType.Data, deserializedData);\n  }\n\n  private _handleChunk(data: { __peerData: number, n: number, total: number, data: Blob }): void {\n    const id = data.__peerData;\n    const chunkInfo = this._chunkedData[id] || {\n      data: [],\n      count: 0,\n      total: data.total\n    };\n\n    chunkInfo.data[data.n] = data.data;\n    chunkInfo.count++;\n    this._chunkedData[id] = chunkInfo;\n\n    if (chunkInfo.total === chunkInfo.count) {\n      // Clean up before making the recursive call to `_handleDataMessage`.\n      delete this._chunkedData[id];\n\n      // We've received all the chunks--time to construct the complete data.\n      const data = new Blob(chunkInfo.data);\n      this._handleDataMessage({ data });\n    }\n  }\n\n  /**\n   * Exposed functionality for users.\n   */\n\n  /** Allows user to close connection. */\n  close(): void {\n    this._buffer = [];\n    this._bufferSize = 0;\n    this._chunkedData = {};\n\n    if (this._negotiator) {\n      this._negotiator.cleanup();\n      this._negotiator = null;\n    }\n\n    if (this.provider) {\n      this.provider._removeConnection(this);\n\n      this.provider = null;\n    }\n\n    if (this.dataChannel) {\n      this.dataChannel.onopen = null;\n      this.dataChannel.onmessage = null;\n      this.dataChannel.onclose = null;\n      this._dc = null;\n    }\n\n    if (this._encodingQueue) {\n      this._encodingQueue.destroy();\n      this._encodingQueue.removeAllListeners();\n      this._encodingQueue = null;\n    }\n\n    if (!this.open) {\n      return;\n    }\n\n    this._open = false;\n\n    super.emit(ConnectionEventType.Close);\n  }\n\n  /** Allows user to send data. */\n  send(data: any, chunked?: boolean): void {\n    if (!this.open) {\n      super.emit(\n        ConnectionEventType.Error,\n        new Error(\n          \"Connection is not open. You should listen for the `open` event before sending messages.\"\n        )\n      );\n      return;\n    }\n\n    if (this.serialization === SerializationType.JSON) {\n      this._bufferedSend(this.stringify(data));\n    } else if (\n      this.serialization === SerializationType.Binary ||\n      this.serialization === SerializationType.BinaryUTF8\n    ) {\n      const blob = util.pack(data);\n\n      if (!chunked && blob.size > util.chunkedMTU) {\n        this._sendChunks(blob);\n        return;\n      }\n\n      if (!util.supports.binaryBlob) {\n        // We only do this if we really need to (e.g. blobs are not supported),\n        // because this conversion is costly.\n        this._encodingQueue.enque(blob);\n      } else {\n        this._bufferedSend(blob);\n      }\n    } else {\n      this._bufferedSend(data);\n    }\n  }\n\n  private _bufferedSend(msg: any): void {\n    if (this._buffering || !this._trySend(msg)) {\n      this._buffer.push(msg);\n      this._bufferSize = this._buffer.length;\n    }\n  }\n\n  // Returns true if the send succeeds.\n  private _trySend(msg: any): boolean {\n    if (!this.open) {\n      return false;\n    }\n\n    if (this.dataChannel.bufferedAmount > DataConnection.MAX_BUFFERED_AMOUNT) {\n      this._buffering = true;\n      setTimeout(() => {\n        this._buffering = false;\n        this._tryBuffer();\n      }, 50);\n\n      return false;\n    }\n\n    try {\n      this.dataChannel.send(msg);\n    } catch (e) {\n      logger.error(`DC#:${this.connectionId} Error when sending:`, e);\n      this._buffering = true;\n\n      this.close();\n\n      return false;\n    }\n\n    return true;\n  }\n\n  // Try to send the first message in the buffer.\n  private _tryBuffer(): void {\n    if (!this.open) {\n      return;\n    }\n\n    if (this._buffer.length === 0) {\n      return;\n    }\n\n    const msg = this._buffer[0];\n\n    if (this._trySend(msg)) {\n      this._buffer.shift();\n      this._bufferSize = this._buffer.length;\n      this._tryBuffer();\n    }\n  }\n\n  private _sendChunks(blob: Blob): void {\n    const blobs = util.chunk(blob);\n    logger.log(`DC#${this.connectionId} Try to send ${blobs.length} chunks...`);\n\n    for (let blob of blobs) {\n      this.send(blob, true);\n    }\n  }\n\n  handleMessage(message: ServerMessage): void {\n    const payload = message.payload;\n\n    switch (message.type) {\n      case ServerMessageType.Answer:\n        this._negotiator.handleSDP(message.type, payload.sdp);\n        break;\n      case ServerMessageType.Candidate:\n        this._negotiator.handleCandidate(payload.candidate);\n        break;\n      default:\n        logger.warn(\n          \"Unrecognized message type:\",\n          message.type,\n          \"from peer:\",\n          this.peer\n        );\n        break;\n    }\n  }\n}\n","import { util } from \"./util\";\nimport logger from \"./logger\";\n\nexport class API {\n  constructor(private readonly _options: any) { }\n\n  private _buildUrl(method: string): string {\n    const protocol = this._options.secure ? \"https://\" : \"http://\";\n    let url =\n      protocol +\n      this._options.host +\n      \":\" +\n      this._options.port +\n      this._options.path +\n      this._options.key +\n      \"/\" +\n      method;\n    const queryString = \"?ts=\" + new Date().getTime() + \"\" + Math.random();\n    url += queryString;\n\n    return url;\n  }\n\n  /** Get a unique ID from the server via XHR and initialize with it. */\n  async retrieveId(): Promise<string> {\n    const url = this._buildUrl(\"id\");\n\n    try {\n      const response = await fetch(url);\n\n      if (response.status !== 200) {\n        throw new Error(`Error. Status:${response.status}`);\n      }\n\n      return response.text();\n    } catch (error) {\n      logger.error(\"Error retrieving ID\", error);\n\n      let pathError = \"\";\n\n      if (\n        this._options.path === \"/\" &&\n        this._options.host !== util.CLOUD_HOST\n      ) {\n        pathError =\n          \" If you passed in a `path` to your self-hosted PeerServer, \" +\n          \"you'll also need to pass in that same path when creating a new \" +\n          \"Peer.\";\n      }\n\n      throw new Error(\"Could not get an ID from the server.\" + pathError);\n    }\n  }\n\n  /** @deprecated */\n  async listAllPeers(): Promise<any[]> {\n    const url = this._buildUrl(\"peers\");\n\n    try {\n      const response = await fetch(url);\n\n      if (response.status !== 200) {\n        if (response.status === 401) {\n          let helpfulError = \"\";\n\n          if (this._options.host === util.CLOUD_HOST) {\n            helpfulError =\n              \"It looks like you're using the cloud server. You can email \" +\n              \"team@peerjs.com to enable peer listing for your API key.\";\n          } else {\n            helpfulError =\n              \"You need to enable `allow_discovery` on your self-hosted \" +\n              \"PeerServer to use this feature.\";\n          }\n\n          throw new Error(\"It doesn't look like you have permission to list peers IDs. \" +\n            helpfulError);\n        }\n\n        throw new Error(`Error. Status:${response.status}`);\n      }\n\n      return response.json();\n    } catch (error) {\n      logger.error(\"Error retrieving list peers\", error);\n\n      throw new Error(\"Could not get list peers from the server.\" + error);\n    }\n  }\n}\n","import { EventEmitter } from \"eventemitter3\";\nimport { util } from \"./util\";\nimport logger, { LogLevel } from \"./logger\";\nimport { Socket } from \"./socket\";\nimport { MediaConnection } from \"./mediaconnection\";\nimport { DataConnection } from \"./dataconnection\";\nimport {\n  ConnectionType,\n  PeerErrorType,\n  PeerEventType,\n  SocketEventType,\n  ServerMessageType\n} from \"./enums\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport { API } from \"./api\";\nimport { PeerConnectOption, PeerJSOption } from \"..\";\n\nclass PeerOptions implements PeerJSOption {\n  debug?: LogLevel; // 1: Errors, 2: Warnings, 3: All logs\n  host?: string;\n  port?: number;\n  path?: string;\n  key?: string;\n  token?: string;\n  config?: any;\n  secure?: boolean;\n  pingInterval?: number;\n  logFunction?: (logLevel: LogLevel, ...rest: any[]) => void;\n}\n\n/**\n * A peer who can initiate connections with other peers.\n */\nexport class Peer extends EventEmitter {\n  private static readonly DEFAULT_KEY = \"peerjs\";\n\n  private readonly _options: PeerOptions;\n  private readonly _api: API;\n  private readonly _socket: Socket;\n\n  private _id: string | null = null;\n  private _lastServerId: string | null = null;\n\n  // States.\n  private _destroyed = false; // Connections have been killed\n  private _disconnected = false; // Connection to PeerServer killed but P2P connections still active\n  private _open = false; // Sockets and such are not yet open.\n  private readonly _connections: Map<string, BaseConnection[]> = new Map(); // All connections for this peer.\n  private readonly _lostMessages: Map<string, ServerMessage[]> = new Map(); // src => [list of messages]\n\n  get id() {\n    return this._id;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  get open() {\n    return this._open;\n  }\n\n  get socket() {\n    return this._socket;\n  }\n\n  /**\n   * @deprecated\n   * Return type will change from Object to Map<string,[]>\n   */\n  get connections(): Object {\n    const plainConnections = Object.create(null);\n\n    for (let [k, v] of this._connections) {\n      plainConnections[k] = v;\n    }\n\n    return plainConnections;\n  }\n\n  get destroyed() {\n    return this._destroyed;\n  }\n  get disconnected() {\n    return this._disconnected;\n  }\n\n  constructor(id?: string | PeerOptions, options?: PeerOptions) {\n    super();\n\n    let userId: string | undefined;\n\n    // Deal with overloading\n    if (id && id.constructor == Object) {\n      options = id as PeerOptions;\n    } else if (id) {\n      userId = id.toString();\n    }\n\n    // Configurize options\n    options = {\n      debug: 0, // 1: Errors, 2: Warnings, 3: All logs\n      host: util.CLOUD_HOST,\n      port: util.CLOUD_PORT,\n      path: \"/\",\n      key: Peer.DEFAULT_KEY,\n      token: util.randomToken(),\n      config: util.defaultConfig,\n      ...options\n    };\n    this._options = options;\n\n    // Detect relative URL host.\n    if (this._options.host === \"/\") {\n      this._options.host = window.location.hostname;\n    }\n\n    // Set path correctly.\n    if (this._options.path) {\n      if (this._options.path[0] !== \"/\") {\n        this._options.path = \"/\" + this._options.path;\n      }\n      if (this._options.path[this._options.path.length - 1] !== \"/\") {\n        this._options.path += \"/\";\n      }\n    }\n\n    // Set whether we use SSL to same as current host\n    if (this._options.secure === undefined && this._options.host !== util.CLOUD_HOST) {\n      this._options.secure = util.isSecure();\n    } else if (this._options.host == util.CLOUD_HOST) {\n      this._options.secure = true;\n    }\n    // Set a custom log function if present\n    if (this._options.logFunction) {\n      logger.setLogFunction(this._options.logFunction);\n    }\n\n    logger.logLevel = this._options.debug || 0;\n\n    this._api = new API(options);\n    this._socket = this._createServerConnection();\n\n    // Sanity checks\n    // Ensure WebRTC supported\n    if (!util.supports.audioVideo && !util.supports.data) {\n      this._delayedAbort(\n        PeerErrorType.BrowserIncompatible,\n        \"The current browser does not support WebRTC\"\n      );\n      return;\n    }\n\n    // Ensure alphanumeric id\n    if (!!userId && !util.validateId(userId)) {\n      this._delayedAbort(PeerErrorType.InvalidID, `ID \"${userId}\" is invalid`);\n      return;\n    }\n\n    if (userId) {\n      this._initialize(userId);\n    } else {\n      this._api.retrieveId()\n        .then(id => this._initialize(id))\n        .catch(error => this._abort(PeerErrorType.ServerError, error));\n    }\n  }\n\n  private _createServerConnection(): Socket {\n    const socket = new Socket(\n      this._options.secure,\n      this._options.host!,\n      this._options.port!,\n      this._options.path!,\n      this._options.key!,\n      this._options.pingInterval\n    );\n\n    socket.on(SocketEventType.Message, (data: ServerMessage) => {\n      this._handleMessage(data);\n    });\n\n    socket.on(SocketEventType.Error, (error: string) => {\n      this._abort(PeerErrorType.SocketError, error);\n    });\n\n    socket.on(SocketEventType.Disconnected, () => {\n      if (this.disconnected) {\n        return;\n      }\n\n      this.emitError(PeerErrorType.Network, \"Lost connection to server.\");\n      this.disconnect();\n    });\n\n    socket.on(SocketEventType.Close, () => {\n      if (this.disconnected) {\n        return;\n      }\n\n      this._abort(PeerErrorType.SocketClosed, \"Underlying socket is already closed.\");\n    });\n\n    return socket;\n  }\n\n  /** Initialize a connection with the server. */\n  private _initialize(id: string): void {\n    this._id = id;\n    this.socket.start(id, this._options.token!);\n  }\n\n  /** Handles messages from the server. */\n  private _handleMessage(message: ServerMessage): void {\n    const type = message.type;\n    const payload = message.payload;\n    const peerId = message.src;\n\n    switch (type) {\n      case ServerMessageType.Open: // The connection to the server is open.\n        this._lastServerId = this.id;\n        this._open = true;\n        this.emit(PeerEventType.Open, this.id);\n        break;\n      case ServerMessageType.Error: // Server error.\n        this._abort(PeerErrorType.ServerError, payload.msg);\n        break;\n      case ServerMessageType.IdTaken: // The selected ID is taken.\n        this._abort(PeerErrorType.UnavailableID, `ID \"${this.id}\" is taken`);\n        break;\n      case ServerMessageType.InvalidKey: // The given API key cannot be found.\n        this._abort(PeerErrorType.InvalidKey, `API KEY \"${this._options.key}\" is invalid`);\n        break;\n      case ServerMessageType.Leave: // Another peer has closed its connection to this peer.\n        logger.log(`Received leave message from ${peerId}`);\n        this._cleanupPeer(peerId);\n        this._connections.delete(peerId);\n        break;\n      case ServerMessageType.Expire: // The offer sent to a peer has expired without response.\n        this.emitError(PeerErrorType.PeerUnavailable, `Could not connect to peer ${peerId}`);\n        break;\n      case ServerMessageType.Offer: {\n        // we should consider switching this to CALL/CONNECT, but this is the least breaking option.\n        const connectionId = payload.connectionId;\n        let connection = this.getConnection(peerId, connectionId);\n\n        if (connection) {\n          connection.close();\n          logger.warn(`Offer received for existing Connection ID:${connectionId}`);\n        }\n\n        // Create a new connection.\n        if (payload.type === ConnectionType.Media) {\n          connection = new MediaConnection(peerId, this, {\n            connectionId: connectionId,\n            _payload: payload,\n            metadata: payload.metadata\n          });\n          this._addConnection(peerId, connection);\n          this.emit(PeerEventType.Call, connection);\n        } else if (payload.type === ConnectionType.Data) {\n          connection = new DataConnection(peerId, this, {\n            connectionId: connectionId,\n            _payload: payload,\n            metadata: payload.metadata,\n            label: payload.label,\n            serialization: payload.serialization,\n            reliable: payload.reliable\n          });\n          this._addConnection(peerId, connection);\n          this.emit(PeerEventType.Connection, connection);\n        } else {\n          logger.warn(`Received malformed connection type:${payload.type}`);\n          return;\n        }\n\n        // Find messages.\n        const messages = this._getMessages(connectionId);\n        for (let message of messages) {\n          connection.handleMessage(message);\n        }\n\n        break;\n      }\n      case ServerMessageType.Logic:\n        this.emit(\"logic\", payload);\n        break;\n      default: {\n        if (!payload) {\n          logger.warn(`You received a malformed message from ${peerId} of type ${type}`);\n          return;\n        }\n\n        const connectionId = payload.connectionId;\n        const connection = this.getConnection(peerId, connectionId);\n\n        if (connection && connection.peerConnection) {\n          // Pass it on.\n          connection.handleMessage(message);\n        } else if (connectionId) {\n          // Store for possible later use\n          this._storeMessage(connectionId, message);\n        } else {\n          logger.warn(\"You received an unrecognized message:\", message);\n        }\n        break;\n      }\n    }\n  }\n\n  /** Stores messages without a set up connection, to be claimed later. */\n  private _storeMessage(connectionId: string, message: ServerMessage): void {\n    if (!this._lostMessages.has(connectionId)) {\n      this._lostMessages.set(connectionId, []);\n    }\n\n    this._lostMessages.get(connectionId).push(message);\n  }\n\n  /** Retrieve messages from lost message store */\n  //TODO Change it to private\n  public _getMessages(connectionId: string): ServerMessage[] {\n    const messages = this._lostMessages.get(connectionId);\n\n    if (messages) {\n      this._lostMessages.delete(connectionId);\n      return messages;\n    }\n\n    return [];\n  }\n\n  /**\n   * Returns a DataConnection to the specified peer. See documentation for a\n   * complete list of options.\n   */\n  connect(peer: string, options: PeerConnectOption = {}): DataConnection {\n    if (this.disconnected) {\n      logger.warn(\n        \"You cannot connect to a new Peer because you called \" +\n        \".disconnect() on this Peer and ended your connection with the \" +\n        \"server. You can create a new Peer to reconnect, or call reconnect \" +\n        \"on this peer if you believe its ID to still be available.\"\n      );\n      this.emitError(\n        PeerErrorType.Disconnected,\n        \"Cannot connect to new Peer after disconnecting from server.\"\n      );\n      return;\n    }\n\n    const dataConnection = new DataConnection(peer, this, options);\n    this._addConnection(peer, dataConnection);\n    return dataConnection;\n  }\n\n  /**\n   * Returns a MediaConnection to the specified peer. See documentation for a\n   * complete list of options.\n   */\n  call(peer: string, stream: MediaStream, options: any = {}): MediaConnection {\n    if (this.disconnected) {\n      logger.warn(\n        \"You cannot connect to a new Peer because you called \" +\n        \".disconnect() on this Peer and ended your connection with the \" +\n        \"server. You can create a new Peer to reconnect.\"\n      );\n      this.emitError(\n        PeerErrorType.Disconnected,\n        \"Cannot connect to new Peer after disconnecting from server.\"\n      );\n      return;\n    }\n\n    if (!stream) {\n      logger.error(\n        \"To call a peer, you must provide a stream from your browser's `getUserMedia`.\"\n      );\n      return;\n    }\n\n    options._stream = stream;\n\n    const mediaConnection = new MediaConnection(peer, this, options);\n    this._addConnection(peer, mediaConnection);\n    return mediaConnection;\n  }\n\n  /** Add a data/media connection to this peer. */\n  private _addConnection(peerId: string, connection: BaseConnection): void {\n    logger.log(`add connection ${connection.type}:${connection.connectionId} to peerId:${peerId}`);\n\n    if (!this._connections.has(peerId)) {\n      this._connections.set(peerId, []);\n    }\n    this._connections.get(peerId).push(connection);\n  }\n\n  //TODO should be private\n  _removeConnection(connection: BaseConnection): void {\n    const connections = this._connections.get(connection.peer);\n\n    if (connections) {\n      const index = connections.indexOf(connection);\n\n      if (index !== -1) {\n        connections.splice(index, 1);\n      }\n    }\n\n    //remove from lost messages\n    this._lostMessages.delete(connection.connectionId);\n  }\n\n  /** Retrieve a data/media connection for this peer. */\n  getConnection(peerId: string, connectionId: string): null | BaseConnection {\n    const connections = this._connections.get(peerId);\n    if (!connections) {\n      return null;\n    }\n\n    for (let connection of connections) {\n      if (connection.connectionId === connectionId) {\n        return connection;\n      }\n    }\n\n    return null;\n  }\n\n  private _delayedAbort(type: PeerErrorType, message: string | Error): void {\n    setTimeout(() => {\n      this._abort(type, message);\n    }, 0);\n  }\n\n  /**\n   * Emits an error message and destroys the Peer.\n   * The Peer is not destroyed if it's in a disconnected state, in which case\n   * it retains its disconnected state and its existing connections.\n   */\n  private _abort(type: PeerErrorType, message: string | Error): void {\n    logger.error(\"Aborting!\");\n\n    this.emitError(type, message);\n\n    if (!this._lastServerId) {\n      this.destroy();\n    } else {\n      this.disconnect();\n    }\n  }\n\n  /** Emits a typed error message. */\n  emitError(type: PeerErrorType, err: string | Error): void {\n    logger.error(\"Error:\", err);\n\n    let error: Error & { type?: PeerErrorType };\n\n    if (typeof err === \"string\") {\n      error = new Error(err);\n    } else {\n      error = err as Error;\n    }\n\n    error.type = type;\n\n    this.emit(PeerEventType.Error, error);\n  }\n\n  /**\n   * Destroys the Peer: closes all active connections as well as the connection\n   *  to the server.\n   * Warning: The peer can no longer create or accept connections after being\n   *  destroyed.\n   */\n  destroy(): void {\n    if (this.destroyed) {\n      return;\n    }\n\n    logger.log(`Destroy peer with ID:${this.id}`);\n\n    this.disconnect();\n    this._cleanup();\n\n    this._destroyed = true;\n\n    this.emit(PeerEventType.Close);\n  }\n\n  /** Disconnects every connection on this peer. */\n  private _cleanup(): void {\n    for (let peerId of this._connections.keys()) {\n      this._cleanupPeer(peerId);\n      this._connections.delete(peerId);\n    }\n\n    this.socket.removeAllListeners();\n  }\n\n  /** Closes all connections to this peer. */\n  private _cleanupPeer(peerId: string): void {\n    const connections = this._connections.get(peerId);\n\n    if (!connections) return;\n\n    for (let connection of connections) {\n      connection.close();\n    }\n  }\n\n  /**\n   * Disconnects the Peer's connection to the PeerServer. Does not close any\n   *  active connections.\n   * Warning: The peer can no longer create or accept connections after being\n   *  disconnected. It also cannot reconnect to the server.\n   */\n  disconnect(): void {\n    if (this.disconnected) {\n      return;\n    }\n\n    const currentId = this.id;\n\n    logger.log(`Disconnect peer with ID:${currentId}`);\n\n    this._disconnected = true;\n    this._open = false;\n\n    this.socket.close();\n\n    this._lastServerId = currentId;\n    this._id = null;\n\n    this.emit(PeerEventType.Disconnected, currentId);\n  }\n\n  /** Attempts to reconnect with the same ID. */\n  reconnect(): void {\n    if (this.disconnected && !this.destroyed) {\n      logger.log(`Attempting reconnection to server with ID ${this._lastServerId}`);\n      this._disconnected = false;\n      this._initialize(this._lastServerId!);\n    } else if (this.destroyed) {\n      throw new Error(\"This peer cannot reconnect to the server. It has already been destroyed.\");\n    } else if (!this.disconnected && !this.open) {\n      // Do nothing. We're still connecting the first time.\n      logger.error(\"In a hurry? We're still trying to make the initial connection!\");\n    } else {\n      throw new Error(`Peer ${this.id} cannot reconnect because it is not disconnected from the server!`);\n    }\n  }\n\n  /**\n   * Get a list of available peer IDs. If you're running your own server, you'll\n   * want to set allow_discovery: true in the PeerServer options. If you're using\n   * the cloud server, email team@peerjs.com to get the functionality enabled for\n   * your key.\n   */\n  listAllPeers(cb = (_: any[]) => { }): void {\n    this._api.listAllPeers()\n      .then(peers => cb(peers))\n      .catch(error => this._abort(PeerErrorType.ServerError, error));\n  }\n}\n","import { util } from \"./util\";\nimport { Peer } from \"./peer\";\n\nexport const peerjs = {\n  Peer,\n  util\n};\n\nexport default Peer;\n\n(<any>window).peerjs = peerjs;\n/** @deprecated Should use peerjs namespace */\n(<any>window).Peer = Peer;\n"]}